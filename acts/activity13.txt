1. Create a class header with two private fields, two constructors (one
   default), two accessors, two mutators.





























2. Provide an implementation file for the above class.
































3. Write a simple header for classes A and B, where A has-a B; and a 
   separate simple header for C and D, where C is-a D.

























4. Write a generic function ``T sum(T *a, int n)``, which returns the sum
   of the elements in the size-n array a.


































5. Write the class method ``Node *Node::reverse()``, which reverses a linked
   list and returns a pointer to the new head of the list.





























6. Write the function ``bool isSorted(Stack s)``, to test if the integer keys 
   in the stack are sorted from top to bottom.































7. Write the function ``bool isPermutation(Queue p, Queue q)``, to test if all
   of the keys which appear in p also appear in q.  You may assume all of the
   keys are unique.





























8. Write a recursive method ``int Node::size()`` to calculate the size of
   a linked list. 
